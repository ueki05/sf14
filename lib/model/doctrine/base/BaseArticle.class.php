<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $body
 * @property timestamp $published_at
 * @property ArticleDetail $ArticleDetail
 * @property Doctrine_Collection $Comments
 * 
 * @method string              getTitle()         Returns the current record's "title" value
 * @method string              getBody()          Returns the current record's "body" value
 * @method timestamp           getPublishedAt()   Returns the current record's "published_at" value
 * @method ArticleDetail       getArticleDetail() Returns the current record's "ArticleDetail" value
 * @method Doctrine_Collection getComments()      Returns the current record's "Comments" collection
 * @method Article             setTitle()         Sets the current record's "title" value
 * @method Article             setBody()          Sets the current record's "body" value
 * @method Article             setPublishedAt()   Sets the current record's "published_at" value
 * @method Article             setArticleDetail() Sets the current record's "ArticleDetail" value
 * @method Article             setComments()      Sets the current record's "Comments" collection
 * 
 * @package    sf14
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'string', 3000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 3000,
             ));
        $this->hasColumn('published_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ArticleDetail', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}